{
  "openapi": "3.1.0",
  "info": {
    "title": "PASSU API",
    "description": "PASSU 인증 시스템 통합 API 문서\n\n이 API는 학생 이벤트 등록 및 관리 시스템을 제공합니다.\n- 학생 인증 (SSUPORT 연동)\n- 이벤트 정보 조회 및 관리\n- 랜덤 키 발급\n- 등록 상태 확인\n- 관리자 페이지 기능",
    "version": "1.0.0",
    "contact": {
      "name": "Passu Team",
      "email": "passu@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [

    {
      "url": "https://dev.passu.sssupport.shop",
      "description": "Dev server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "서비스 상태 확인"
    },
    {
      "name": "Student",
      "description": "학생 정보 관리"
    },
    {
      "name": "Events",
      "description": "이벤트 관리 (사용자)"
    },
    {
      "name": "event",
      "description": "행사 관련 API (관리자)"
    },
    {
      "name": "enrollment",
      "description": "학생 등록 관련 API (관리자)"
    }
  ],
  "paths": {
    "/user-api/health": {
      "get": {
        "tags": ["Health"],
        "summary": "서비스 상태 확인",
        "description": "API 서버의 상태를 확인합니다.",
        "security": [],
        "responses": {
          "200": {
            "description": "서비스가 정상적으로 동작 중",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    },
                    "service": {
                      "type": "string",
                      "example": "passu-backend"
                    },
                    "message": {
                      "type": "string",
                      "example": "Service is up and running"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user-api/student-info": {
      "get": {
        "tags": ["Student"],
        "summary": "학생 정보 조회",
        "description": "JWT 토큰을 통해 현재 로그인한 학생의 정보를 조회합니다.",
        "responses": {
          "200": {
            "description": "학생 정보 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "인증 실패",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "내부 서버 오류",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user-api/events/{eventId}": {
      "get": {
        "tags": ["Events"],
        "summary": "이벤트 정보 조회",
        "description": "특정 이벤트의 상세 정보를 조회합니다.",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "이벤트 ID",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "이벤트 정보 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청 (eventId 누락)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "이벤트를 찾을 수 없음",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "내부 서버 오류",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user-api/events/{eventId}/count": {
      "get": {
        "tags": ["Events"],
        "summary": "이벤트 등록자 수 조회",
        "description": "특정 이벤트에 등록된 학생 수를 조회합니다.",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "이벤트 ID",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "등록자 수 조회 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductCountResponse"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청 (eventId 누락)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "이벤트를 찾을 수 없음",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "내부 서버 오류",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user-api/events/{eventId}/issue-random-key": {
      "post": {
        "tags": ["Events"],
        "summary": "랜덤 키 발급",
        "description": "학생이 이벤트에 참여하기 위한 랜덤 키를 발급받습니다.\n\n**발급 조건:**\n- 학생회 계정은 참여 불가\n- 이벤트 요구사항 충족 (학과, 학생회비 등)\n- 이벤트 정원 내\n- 15분간 유효",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "description": "이벤트 ID",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["token"],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "SSUPORT에서 발급받은 JWT 토큰",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "랜덤 키 발급 성공",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RandomKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청 (토큰 또는 eventId 누락)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "인증 실패",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "참여 불가 (자격 미달, 매진 등)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "이벤트를 찾을 수 없음",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "요청 한도 초과",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "내부 서버 오류",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event/{id}": {
      "get": {
        "tags": ["event"],
        "summary": "행사 디테일 조회 API",
        "description": "행사 디테일을 조회하는 API 입니다.\n행사 id를 넘겨받아 해당 행사에 대한 정보를 응답합니다.\n",
        "operationId": "get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["event"],
        "summary": "행사 수정 API",
        "description": "행사를 수정하는 API 입니다.\n",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["event"],
        "summary": "행사 삭제 API",
        "description": "행사를 삭제하는 API 입니다.\n",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event": {
      "get": {
        "tags": ["event"],
        "summary": "행사 리스트 조회 API",
        "description": "행사 리시트를 조회하는 API입니다.\n",
        "operationId": "getEventList",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["BEFORE", "ONGOING", "PAUSE", "AFTER"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponsePageEventResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["event"],
        "summary": "행사 생성 API",
        "description": "행사를 생성하는 API 입니다.\n",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event/{eventId}/enroll": {
      "post": {
        "tags": ["enrollment"],
        "summary": "학생 등록 API",
        "description": "학생이 발급받은 랜덤키를 검증하는 API 입니다.\n학생이 발급받은 랜덤 키와 행사 id의 유효성을 검증하고, 중복으로 등록되었는지 검증합니다.\n",
        "operationId": "enroll",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollmentRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseEnrollmentResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event/{id}/start": {
      "patch": {
        "tags": ["event"],
        "summary": "행사 시작 API",
        "description": "행사를 시작하는 API 입니다.\n해당 행사의 키 풀이 생성되고, 행사 상태를 ONGOING으로 바꿉니다.\n",
        "operationId": "start",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event/{id}/pause": {
      "patch": {
        "tags": ["event"],
        "summary": "행사 멈춤 API",
        "description": "행사를 멈추는 API 입니다.\n해당 행사의 상태를 PAUSE로 바꿉니다.\n",
        "operationId": "pause",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event/{id}/end": {
      "patch": {
        "tags": ["event"],
        "summary": "행사 종료 API",
        "description": "행사를 종료시키는 API 입니다.\n해당 행사의 상태를 AFTER로 바꿉니다.\n",
        "operationId": "end",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event/{id}/enrollments/excel": {
      "get": {
        "tags": ["event"],
        "summary": "행사 등록자 엑셀 다운로드 API",
        "description": "특정 행사에 등록된 학생들의 명단을 엑셀 파일로 다운로드하는 API입니다.\n",
        "operationId": "downloadEnrollmentsExcel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event/{eventId}/enrollments": {
      "get": {
        "tags": ["enrollment"],
        "summary": "등록된 학생 목록 조회 API",
        "description": "특정 행사에 등록된 학생들의 목록을 반환하는 API입니다.\n최근 등록 순으로 정렬되어 반환됩니다.\n",
        "operationId": "getEnrollments",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseListEnrollmentListResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event/{eventId}/enrolled-count": {
      "get": {
        "tags": ["enrollment"],
        "summary": "등록된 학생 수 조회 API",
        "description": "특정 행사에 등록된 학생 수를 반환하는 API입니다.\n",
        "operationId": "getEnrolledCount",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseEnrolledCountResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/event/events/{eventId}": {
      "get": {
        "tags": ["event"],
        "summary": "이벤트 참여 여부 확인 API",
        "description": "특정 유저가 특정 이벤트에 참여했는지 확인하는 API입니다.\n헤더의 Authorization 토큰에서 학번을 추출하여 해당 학번이 이벤트에 참여했는지 검증합니다.\n",
        "operationId": "checkEventParticipation",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventParticipationResponseDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "SSUPORT에서 발급받은 JWT 토큰"
      }
    },
    "schemas": {
      "Student": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "string",
            "description": "학생 ID",
            "example": "2020123456"
          },
          "name": {
            "type": "string",
            "description": "학생 이름",
            "example": "홍길동"
          },
          "status": {
            "type": "integer",
            "description": "학생 상태 (비트 플래그)",
            "example": 1
          },
          "isPaidUnionFee": {
            "type": "boolean",
            "description": "학생회비 납부 여부",
            "example": true
          },
          "isCouncil": {
            "type": "boolean",
            "description": "학생회 여부",
            "example": false
          },
          "majorCode": {
            "type": "integer",
            "description": "학과 코드",
            "example": 101
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "이벤트 ID",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "이벤트명",
            "example": "여름 축제"
          },
          "description": {
            "type": "string",
            "description": "이벤트 설명",
            "example": "2025 여름 축제입니다"
          },
          "product_name": {
            "type": "string",
            "description": "상품명",
            "example": "축제 티켓"
          },
          "product_quantity": {
            "type": "integer",
            "description": "상품 수량 (정원)",
            "example": 1000
          },
          "location": {
            "type": "string",
            "description": "장소",
            "example": "대강당"
          },
          "require_status": {
            "type": "integer",
            "description": "요구되는 학생 상태",
            "example": 0
          },
          "require_union_fee": {
            "type": "boolean",
            "description": "학생회비 납부 요구 여부",
            "example": true
          },
          "allowed_departments": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "참여 가능한 학과 코드 목록",
            "example": [101, 102, 56]
          },
          "status": {
            "type": "string",
            "enum": ["BEFORE", "ONGOING", "PAUSE", "FINISHED"],
            "description": "이벤트 상태",
            "example": "ONGOING"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "description": "시작 시간",
            "example": "2024-01-15 10:00:00"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "description": "종료 시간",
            "example": "2024-01-22 18:00:00"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "생성 시간",
            "example": "2024-01-01 00:00:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "수정 시간",
            "example": "2024-01-01 00:00:00"
          }
        }
      },
      "StudentInfoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Student information retrieved successfully"
          },
          "data": {
            "$ref": "#/components/schemas/Student"
          }
        }
      },
      "EventInfoResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Event retrieved successfully"
          },
          "data": {
            "$ref": "#/components/schemas/Event"
          }
        }
      },
      "ProductCountResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Product count retrieved successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "enrolled_count": {
                "type": "integer",
                "description": "등록된 학생 수",
                "example": 150
              }
            }
          }
        }
      },
      "RandomKeyResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Random key issued successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "random_key": {
                "type": "string",
                "description": "발급된 랜덤 키",
                "example": "1234"
              },
              "expire_time": {
                "type": "integer",
                "description": "만료 시간 (초)",
                "example": 900
              },
              "event_id": {
                "type": "integer",
                "description": "이벤트 ID",
                "example": 1
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "오류 메시지",
            "example": "Invalid token or failed to retrieve user information"
          }
        }
      },
      "EventRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "productQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "requireStatus": {
            "type": "integer",
            "format": "int32"
          },
          "requireUnionFee": {
            "type": "boolean"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "productQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["BEFORE", "ONGOING", "PAUSE", "AFTER"]
          },
          "requireStatus": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "requireUnionFee": {
            "type": "boolean"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EnrollmentRequestDto": {
        "type": "object",
        "properties": {
          "randomKey": {
            "type": "string"
          }
        }
      },
      "ApiResponseEnrollmentResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/EnrollmentResponseDto"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "EnrollmentResponseDto": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "integer",
            "format": "int64"
          },
          "studentId": {
            "type": "string"
          },
          "studentName": {
            "type": "string"
          },
          "enrollmentId": {
            "type": "integer",
            "format": "int64"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ApiResponsePageEventResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PageEventResponseDto"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "PageEventResponseDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventResponseDto"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "unpaged": {
            "type": "boolean"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          }
        }
      },
      "ApiResponseListEnrollmentListResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnrollmentListResponseDto"
            }
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "EnrollmentListResponseDto": {
        "type": "object",
        "properties": {
          "enrollmentId": {
            "type": "integer",
            "format": "int64"
          },
          "studentId": {
            "type": "string"
          },
          "studentName": {
            "type": "string"
          },
          "studentDepartment": {
            "type": "string"
          },
          "randomKey": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ApiResponseEnrolledCountResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/EnrolledCountResponseDto"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "EnrolledCountResponseDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EventParticipationResponseDto": {
        "type": "object",
        "properties": {
          "enrolled": {
            "type": "boolean"
          }
        }
      }
    }
  }
}